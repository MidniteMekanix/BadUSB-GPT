REM Author: ooovenenoso
REM Open PowerShell
DELAY 500
GUI x
DELAY 2000
STRING a
DELAY 2000
LEFTARROW
DELAY 2000
ENTER
REM Create PowerShell script to gather system information
DELAY 500
STRING $system_info = @{
ENTER
DELAY 500
STRING 'OS' = $(Get-CimInstance Win32_OperatingSystem).Caption;
ENTER
DELAY 500
STRING 'Version' = $(Get-CimInstance Win32_OperatingSystem).Version;
ENTER
DELAY 500
STRING 'Architecture' = $(Get-CimInstance Win32_OperatingSystem).OSArchitecture;
ENTER
DELAY 500
STRING 'ComputerName' = $(Get-CimInstance Win32_OperatingSystem).CSName;
ENTER
DELAY 500
STRING 'LastBootTime' = $(Get-CimInstance Win32_OperatingSystem).LastBootUpTime;
ENTER
DELAY 500
STRING 'InstalledUpdates' = $(Get-HotFix | Sort-Object -Property InstalledOn -Descending | Select-Object -First 5).Description;
ENTER
DELAY 500
STRING 'NetworkInfo' = $(Get-CimInstance Win32_NetworkAdapterConfiguration | Where-Object {$_.IPEnabled -eq $true}).IPAddress;
ENTER
DELAY 500
STRING 'FirewallStatus' = $(Get-NetFirewallProfile | Where-Object { $_.Enabled -eq $true }).Name;
ENTER
DELAY 500
STRING 'UserAccounts' = $(Get-LocalUser | Where-Object { $_.Enabled -eq $true }).Name;
ENTER
DELAY 500
STRING 'RunningProcesses' = $(Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 5).Name;
ENTER
DELAY 500
STRING }
ENTER
REM Using placeholders for sensitive data before sending to API
DELAY 500
STRING $prompt_text = "Given the detailed system information: OS: OS_NAME, Version: OS_VERSION, Architecture: OS_ARCHITECTURE, Computer Name: COMPUTER_NAME, Last Boot Time: LAST_BOOT_TIME, Installed Updates: INSTALLED_UPDATES, Network Info: NETWORK_INFO, Firewall Status: FIREWALL_STATUS, User Accounts: USER_ACCOUNTS, Running Processes: RUNNING_PROCESSES, provide a pentesting report identifying potential vulnerabilities in English."
ENTER
DELAY 500
STRING $messages = @(
ENTER
DELAY 1000
STRING @{ 'role' = 'system'; 'content' = 'You are analyzing detailed system information for potential vulnerabilities.' },
ENTER
DELAY 1000
STRING @{ 'role' = 'user'; 'content' = $prompt_text }
ENTER
DELAY 1000
STRING )
ENTER
DELAY 500
STRING $headers = @{ 'Authorization' = 'Bearer YOUR_OPENAI_API_KEY'; 'Content-Type' = 'application/json' }
ENTER
DELAY 500
STRING $response = Invoke-RestMethod -Uri 'https://api.openai.com/v1/chat/completions' -Method POST -Headers $headers -Body (@{ model = 'gpt-3.5-turbo'; messages = $messages } | ConvertTo-Json)
ENTER
DELAY 500
STRING $htmlContent = @"
ENTER
DELAY 500
STRING <html><head><title>Pentesting Report</title></head><body>
ENTER
DELAY 500
STRING <h2>Pentesting Report</h2>
ENTER
DELAY 500
STRING $($response.choices[0].message.content)
ENTER
DELAY 500
STRING </body></html>
ENTER
DELAY 500
STRING "@
ENTER
DELAY 500
STRING Set-Content -Path $env:USERPROFILE\Desktop\Pentesting_Report.html -Value $htmlContent
ENTER
REM Replacing placeholders with actual values in the local context
DELAY 500
STRING (Get-Content $env:USERPROFILE\Desktop\Pentesting_Report.html).Replace('OS_NAME', $system_info.OS).Replace('OS_VERSION', $system_info.Version).Replace('OS_ARCHITECTURE', $system_info.Architecture).Replace('COMPUTER_NAME', $system_info.ComputerName).Replace('LAST_BOOT_TIME', $system_info.LastBootTime).Replace('INSTALLED_UPDATES', $system_info.InstalledUpdates).Replace('NETWORK_INFO', $system_info.NetworkInfo).Replace('FIREWALL_STATUS', $system_info.FirewallStatus).Replace('USER_ACCOUNTS', $system_info.UserAccounts).Replace('RUNNING_PROCESSES', $system_info.RunningProcesses) | Set-Content $env:USERPROFILE\Desktop\Pentesting_Report.html
ENTER
